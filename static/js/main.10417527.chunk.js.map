{"version":3,"sources":["components/AuthContext/AuthContext.tsx","utils/fetchClient.ts","components/Sidebar/StaticticSidebar.tsx","components/Sidebar/MenuSidebar.tsx","components/Sidebar/StorageSidebar.tsx","components/Sidebar/ManageSidebar.tsx","App.tsx","api/todos.ts","components/RequireAuth/RequireAuth.tsx","components/Loader/Loader.tsx","LoginPage/LoginPage.tsx","components/HomePage/HomePage.tsx","components/StatisticsPages/ClientsPage/ClientRow/ClientRow.tsx","components/StatisticsPages/ClientsPage/ClientsPage.tsx","components/StatisticsPages/EmployeesPage/EmployeeRow/EmployeeRow.tsx","components/StatisticsPages/EmployeesPage/EmployeesPage.tsx","components/StatisticsPages/ProductsPage/ProductRow/ProductRow.tsx","components/StatisticsPages/ProductsPage/ProductsPage.tsx","components/StatisticsPages/ReceiptsPage/ReceiptRow/ReceiptRow.tsx","components/StatisticsPages/ReceiptsPage/ReceiptsPage.tsx","components/ManagesPages/ClientsPage/ClientRow/ClientRow.tsx","components/ManagesPages/ClientsPage/ClientsPage.tsx","components/ManagesPages/UsersPage/UserRow/UserRow.tsx","components/ManagesPages/UsersPage/UsersPage.tsx","components/ManagesPages/RolesPage/RoleRow/RoleRow.tsx","components/ManagesPages/RolesPage/RolesPage.tsx","Root.tsx","index.tsx"],"names":["AuthContext","React","createContext","authorized","login","_loginnedUser","Promise","resolve","logout","userWithToken","AuthProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setAuthorized","_useState3","_useState4","setUserWithToken","_login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loginnedUser","wrap","_context","prev","next","Error","stop","apply","arguments","_logout","_callee2","_context2","_jsx","Provider","value","_x","request","url","delay","token","length","undefined","data","options","method","body","JSON","stringify","headers","Authorization","concat","setTimeout","then","fetch","response","ok","json","client","StaticticSidebar","_ref$fullSidebar","fullSidebar","_Fragment","_jsxs","className","NavLink","to","MenuSidebar","StorageSidebar","ManageSidebar","App","navigate","useNavigate","widthNavbar","setNidthNavbar","isOpenedUserInfo","setIsOpenedUserInfo","_useState5","window","innerWidth","_useState6","windowWidth","setWindowWidth","_useState7","statistic","menu","storage","manage","_useState8","sidebar","setSidebar","_useContext","useContext","user","userName","name","split","useEffect","addEventListener","fullNavbar","navbarStyles","width","wrapperStyles","transition","navlinkStyle","display","closeUserInfo","logoutFromSystem","deAuthorizeInSystem","sessionStorage","removeItem","resetSidebar","changeSidebar","_objectSpread","_defineProperty","style","onClick","role","classNames","type","Outlet","RequireAuth","pathname","useLocation","Navigate","state","replace","Loader","LoginPage","setUserName","password","setPassword","isEnteredUserName","setIsEnteredUserName","isEnteredPassword","setIsEnteredPassword","_useState9","_useState10","errorMessage","setErrorMessage","inputRef","useRef","_useState11","_useState12","buttonLoader","setButtonLoader","_useState13","_useState14","pageLoader","setPageLoader","authorize","authorizeInSystem","setItem","catch","finally","createdUser","getItem","parse","_inputRef$current","current","focus","onSubmit","event","preventDefault","trim","placeholder","onChange","target","ref","src","alt","HomePage","EMPTY","ClientRow","fullName","mobilePhone","byCardSum","byCashSum","receiptsCount","averageReceiptSum","getSortedClients","clients","param","query","reversed","sortedClients","_toConsumableArray","filter","toLocaleLowerCase","includes","sort","client1","client2","Number","localeCompare","ClientsPage","setClients","setQuery","setParam","setReversed","setSortedClients","getStatisticsClients","newClients","setSortedParam","newParam","e","newQuery","title","map","id","EmployeeRow","employee","getSortedEmployees","employees","sortedEmployees","user1","user2","EmployeesPage","setEmployees","setSortedEmployees","getStatisticsEmployees","newEmployees","ProductRow","product","getSortedProducts","products","sortedProducts","product1","product2","ProductsPage","setProducts","setSortedProducts","getStatisticsProducts","newProducts","ReceiptRow","receipt","getSortedReceipts","receipts","sortedReceipts","receipt1","receipt2","ReceiptsPage","setReceipts","setSortedReceipts","getStatisticsReceipts","newReceipts","bankCard","receiptSum","getManagesClients","UserRow","roleName","pinCode","lastLoginDate","toLocaleString","getSortedUsers","users","sortedUsers","UsersPage","setusers","setSortedUsers","getUsers","newUsers","RoleRow","getSortedRoles","roles","sortedRoles","role1","role2","RolesPage","setRoles","setSortedRoles","getManagesRoles","newRoles","Root","BrowserRouter","Routes","Route","path","element","index","StatisticsClientsPage","ManagesClientsPage","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.10417527.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport { UserWithToken } from '../../types/userWithToken';\n\nexport const AuthContext = React.createContext({\n  authorized: false, // false\n  login: (_loginnedUser: UserWithToken) => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  userWithToken: null as UserWithToken | null,\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [authorized, setAuthorized] = useState(false); // false\n  const [userWithToken, setUserWithToken]\n    = useState<UserWithToken | null>(null);\n\n  async function login(loginnedUser: UserWithToken) {\n    if (!loginnedUser) {\n      throw new Error('Wrong');\n    }\n\n    setUserWithToken(loginnedUser);\n    setAuthorized(true);\n  }\n\n  async function logout() {\n    setAuthorized(false);\n  }\n\n  return (\n    <AuthContext.Provider value={{\n      authorized,\n      login,\n      logout,\n      userWithToken,\n    }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'http://localhost:5211';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  token = '',\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n      Authorization: `Bearer ${token}`,\n    };\n  } else {\n    options.headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  } // token - полученный ранее jwt-токен\n\n  // we wait for testing purpose to see loaders\n  return wait(100)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string, token?: string) => request<T>(url, token),\n  post: <T>(\n    url: string, data: any, token?: string,\n  ) => request<T>(url, token, 'POST', data),\n  patch: <T>(\n    url: string, data: any, token?: string,\n  ) => request<T>(url, token, 'PATCH', data),\n  delete: (url: string, token?: string) => request(url, token, 'DELETE'),\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Sidebar.scss';\n\ntype Props = {\n  fullSidebar?: boolean,\n};\n\nexport const StaticticSidebar: React.FC<Props> = ({ fullSidebar = false }) => (\n  <>\n    {\n      fullSidebar ? (\n        <ul className=\"menu-list\">\n\n          <li>\n            <NavLink to=\"statistic/clients\">\n              <p>Clients</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/statistic/employees\">\n              <p>Employees</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/statistic/products\">\n              <p>Products</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/statistic/receipts\">\n              <p>Receipts</p>\n            </NavLink>\n          </li>\n        </ul>\n      ) : (\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/statistic/clients\">\n              <p>Clients</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/statistic/employees\">\n              <p>Employees</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/statistic/products\">\n              <p>Products</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/statistic/receipts\">\n              <p>Receipts</p>\n            </NavLink>\n          </div>\n        </div>\n      )\n    }\n  </>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Sidebar.scss';\n\ntype Props = {\n  fullSidebar?: boolean,\n};\n\nexport const MenuSidebar: React.FC<Props> = ({ fullSidebar = false }) => (\n  <>\n    {\n      fullSidebar ? (\n        <ul className=\"menu-list\">\n          <li>\n            <NavLink to=\"/\">\n              <p>Products</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/\">\n              <p>Tech. Cards</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/\">\n              <p>Semifinished products</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/\">\n              <p>Ingredients</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/\">\n              <p>Categories of products and tech. cards</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/\">\n              <p>Categories of ingredients</p>\n            </NavLink>\n          </li>\n        </ul>\n      ) : (\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/\">\n              <p>Products</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/\">\n              <p>Tech. Cards</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/\">\n              <p>Semifinished products</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/\">\n              <p>Ingredients</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/\">\n              <p>Categories of products and tech. cards</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/\">\n              <p>Categories of ingredients</p>\n            </NavLink>\n          </div>\n        </div>\n      )\n    }\n  </>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Sidebar.scss';\n\ntype Props = {\n  fullSidebar?: boolean,\n};\n\nexport const StorageSidebar: React.FC<Props> = ({ fullSidebar = false }) => (\n  <>\n    {\n      fullSidebar ? (\n        <ul className=\"menu-list\">\n\n          <li>\n            <NavLink to=\"/storage/remains\">\n              <p>Remains</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/storage/supplies\">\n              <p>Supplies</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/storage/writeoffs\">\n              <p>Write-offs</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/storage/suppliers\">\n              <p>Suppliers</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/storage/writeoffcauses\">\n              <p>Write-off causes</p>\n            </NavLink>\n          </li>\n        </ul>\n      ) : (\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/storage/remains\">\n              <p>Remains</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/storage/supplies\">\n              <p>Supplies</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/storage/writeoffs\">\n              <p>Write-offs</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/storage/suppliers\">\n              <p>Suppliers</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/storage/writeoffcauses\">\n              <p>Write-off causes</p>\n            </NavLink>\n          </div>\n        </div>\n      )\n    }\n  </>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Sidebar.scss';\n\ntype Props = {\n  fullSidebar?: boolean,\n};\n\nexport const ManageSidebar: React.FC<Props> = ({ fullSidebar = false }) => (\n  <>\n    {\n      fullSidebar ? (\n        <ul className=\"menu-list\">\n\n          <li>\n            <NavLink to=\"/manage/clients\">\n              <p>Clients</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/manage/users\">\n              <p>Users</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/manage/roles\">\n              <p>Roles</p>\n            </NavLink>\n          </li>\n        </ul>\n      ) : (\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/manage/clients\">\n              <p>Clients</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/manage/users\">\n              <p>Users</p>\n            </NavLink>\n          </div>\n          <div className=\"dropdown-item\">\n            <NavLink to=\"/manage/roles\">\n              <p>Roles</p>\n            </NavLink>\n          </div>\n        </div>\n      )\n    }\n  </>\n);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport { useContext, useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useNavigate,\n} from 'react-router-dom';\nimport { AuthContext } from './components/AuthContext/AuthContext';\nimport { deAuthorizeInSystem } from './api/todos';\nimport { StaticticSidebar } from './components/Sidebar/StaticticSidebar';\nimport { MenuSidebar } from './components/Sidebar/MenuSidebar';\nimport { StorageSidebar } from './components/Sidebar/StorageSidebar';\nimport { ManageSidebar } from './components/Sidebar/ManageSidebar';\n\ntype Sidebar = {\n  [key: string]: boolean,\n};\n\nexport const App = () => {\n  const navigate = useNavigate();\n  const [widthNavbar, setNidthNavbar] = useState(3);\n  const [isOpenedUserInfo, setIsOpenedUserInfo] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(() => window.innerWidth);\n  const [sidebar, setSidebar] = useState<Sidebar>({\n    statistic: false,\n    menu: false,\n    storage: false,\n    manage: false,\n  });\n  const { userWithToken, logout } = useContext(AuthContext);\n\n  const user = userWithToken?.user;\n  const token = userWithToken?.token || '';\n  const userName = user?.name.split(' ')[0] || '';\n\n  useEffect(() => {\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth), false);\n  }, []);\n\n  const fullNavbar = (widthNavbar === 10 && windowWidth >= 1440) || windowWidth < 1440;\n\n  const navbarStyles = {\n    width: `${widthNavbar}vw`,\n    // transition: 'all 0.3s ease',\n    // overflow: widthNavbar === 10 ? 'hidden' : '',\n  };\n\n  const wrapperStyles = {\n    width: `${widthNavbar}vw`,\n    transition: 'all 0.3s ease-in-out',\n    // overflow: widthNavbar === 10 ? 'hidden' : 'visible',\n  };\n\n  const navlinkStyle = {\n    display: widthNavbar === 3 ? 'flex' : '',\n    'justify-content': widthNavbar === 3 ? 'center' : '',\n  };\n\n  const changeUserInfo = () => {\n    setIsOpenedUserInfo(!isOpenedUserInfo);\n  };\n\n  const closeUserInfo = () => {\n    setIsOpenedUserInfo(false);\n  };\n\n  const logoutFromSystem = () => { // error !!! Danya should return object\n    deAuthorizeInSystem(token)\n      .then(() => logout()\n        .then(() => {\n          sessionStorage.removeItem('user');\n          navigate('/');\n        }));\n  };\n\n  const resetSidebar = () => {\n    setSidebar({\n      statistic: false,\n      menu: false,\n      storage: false,\n      manage: false,\n    });\n  };\n\n  const changeSidebar = (name: string) => {\n    resetSidebar();\n    closeUserInfo();\n\n    setSidebar(prev => ({\n      ...prev,\n      [name]: !sidebar[name],\n    }));\n  };\n\n  const changeWidthNavbar = (): void => {\n    resetSidebar();\n    closeUserInfo();\n\n    if (widthNavbar === 3) {\n      setNidthNavbar(10);\n    } else {\n      setNidthNavbar(3);\n    }\n  };\n\n  return (\n\n    <div className=\"fullpage\">\n      <div className=\"wrapper\" style={wrapperStyles}>\n        <nav className=\"navbar main-content has-background-light\" style={navbarStyles}>\n          <div className=\"navbar-brand navbar-brand--top\">\n            {\n              fullNavbar && (\n                <NavLink to=\"/\" className=\"navbar-home\">\n                  <strong className=\"has-text-black-bis\">\n                    {\n                      windowWidth >= 1440\n                        ? 'StoreHouse'\n                        : 'SH'\n                    }\n                  </strong>\n                </NavLink>\n              )\n            }\n            <div\n              onClick={changeWidthNavbar}\n              role=\"button\"\n              className={classNames('navbar-burger', {\n                'is-active': widthNavbar === 10,\n              })}\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              style={{ width: widthNavbar === 10 ? '30%' : '100%' }}\n            >\n              <span aria-hidden=\"true\" />\n              <span aria-hidden=\"true\" />\n              <span aria-hidden=\"true\" />\n            </div>\n          </div>\n          <div className=\"navbar-brand navbar-brand--middle\">\n            <aside className=\"menu\">\n              <ul className=\"menu-list\">\n                {/* home */}\n                <li>\n                  <NavLink to=\"/\" className=\"m-auto\" style={navlinkStyle}>\n                    <span className=\"icon-text\">\n                      <span className=\"icon\">\n                        <i className=\"fas fa-home\" />\n                      </span>\n                      {\n                        widthNavbar === 10 && (\n                          <p>Home</p>\n                        )\n                      }\n                    </span>\n                  </NavLink>\n                </li>\n                {/* Statictics */}\n                <li>\n                  {\n                    widthNavbar === 10\n                      ? (\n                        <>\n                          <a\n                            onClick={() => changeSidebar('statistic')}\n                            className={classNames({\n                              'has-background-grey-lighter': sidebar.statistic,\n                            })}\n                          >\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-signal\" />\n                              </span>\n                              <p>Statistic</p>\n                            </span>\n                          </a>\n                          {\n                            sidebar.statistic && (\n                              <StaticticSidebar fullSidebar={true as boolean} />\n                            )\n                          }\n                        </>\n                      ) : (\n                        <div className=\"dropdown is-hoverable\">\n                          <div className=\"dropdown-trigger\">\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-signal\" />\n                              </span>\n                            </span>\n                          </div>\n                          <div className=\"dropdown-menu\" role=\"menu\">\n                            <StaticticSidebar />\n                          </div>\n                        </div>\n                      )\n                  }\n                </li>\n                {/* Menu */}\n                <li>\n                  {\n                    widthNavbar === 10\n                      ? (\n                        <>\n                          <a\n                            onClick={() => changeSidebar('menu')}\n                            className={classNames({\n                              'has-background-grey-lighter': sidebar.menu,\n                            })}\n                          >\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-list\" />\n                              </span>\n                              <p>Menu</p>\n                            </span>\n                          </a>\n                          {\n                            sidebar.menu && (\n                              <MenuSidebar fullSidebar={true as boolean} />\n                            )\n                          }\n                        </>\n                      ) : (\n                        <div className=\"dropdown is-hoverable\">\n                          <div className=\"dropdown-trigger\">\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-list\" />\n                              </span>\n                            </span>\n                          </div>\n                          <div className=\"dropdown-menu\" role=\"menu\">\n                            <MenuSidebar />\n                          </div>\n                        </div>\n                      )\n                  }\n                </li>\n                {/* Storage */}\n                <li>\n                  {\n                    widthNavbar === 10\n                      ? (\n                        <>\n                          <a\n                            onClick={() => changeSidebar('storage')}\n                            className={classNames({\n                              'has-background-grey-lighter': sidebar.storage,\n                            })}\n                          >\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-box\" />\n                              </span>\n                              <p>Storage</p>\n                            </span>\n                          </a>\n                          {\n                            sidebar.storage && (\n                              <StorageSidebar fullSidebar={true as boolean} />\n                            )\n                          }\n                        </>\n                      ) : (\n                        <div className=\"dropdown is-hoverable\">\n                          <div className=\"dropdown-trigger\">\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-box\" />\n                              </span>\n                            </span>\n                          </div>\n                          <div className=\"dropdown-menu\" role=\"menu\">\n                            <StorageSidebar />\n                          </div>\n                        </div>\n                      )\n                  }\n                </li>\n                {/* Manage */}\n                <li>\n                  {\n                    widthNavbar === 10\n                      ? (\n                        <>\n                          <a\n                            onClick={() => changeSidebar('manage')}\n                            className={classNames({\n                              'has-background-grey-lighter': sidebar.manage,\n                            })}\n                          >\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-chart-pie\" />\n                              </span>\n                              <p>Manage</p>\n                            </span>\n                          </a>\n                          {\n                            sidebar.manage && (\n                              <ManageSidebar fullSidebar={true as boolean} />\n                            )\n                          }\n                        </>\n                      ) : (\n                        <div className=\"dropdown is-hoverable\">\n                          <div className=\"dropdown-trigger\">\n                            <span className=\"icon-text\">\n                              <span className=\"icon\">\n                                <i className=\"fas fa-chart-pie\" />\n                              </span>\n                            </span>\n                          </div>\n                          <div className=\"dropdown-menu\" role=\"menu\">\n                            <ManageSidebar />\n                          </div>\n                        </div>\n                      )\n                  }\n                </li>\n              </ul>\n            </aside>\n\n          </div>\n          <div className=\"navbar-brand navbar-brand--bottom\">\n            <div\n              className=\"user-information\"\n              role=\"button\"\n              onClick={changeUserInfo}\n            >\n              {\n                widthNavbar === 10\n                  ? (\n                    <div className={classNames('dropdown is-up user-dropdown', {\n                      'is-active': isOpenedUserInfo,\n                    })}\n                    >\n                      <div className=\"user-name\">\n                        <span className=\"icon is-small\">\n                          <i\n                            className={classNames('fas', {\n                              'fa-angle-up': !isOpenedUserInfo,\n                              'fa-angle-down': isOpenedUserInfo,\n                            })}\n                            aria-hidden=\"true\"\n                          />\n                        </span>\n                        <p>{userName}</p>\n                      </div>\n                      <div className=\"dropdown-trigger\">\n                        <button type=\"button\" className=\"dropdown-button\">\n                          <div\n                            role=\"button\"\n                            className=\"fas fa-user dropdown is-up\"\n                          />\n                        </button>\n                      </div>\n                      <div className=\"dropdown-menu\" role=\"menu\">\n                        <div className=\"dropdown-content\">\n                          <div className=\"dropdown-item\">\n                            <div\n                              role=\"button\"\n                              onClick={logoutFromSystem}\n                            >\n                              <span className=\"icon\">\n                                <i className=\"fa fa-sign-out\" />\n                              </span>\n                              Logout\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"dropdown is-hoverable\">\n                      <div className=\"dropdown-trigger\">\n                        <span className=\"icon-text\">\n                          <span className=\"icon\">\n                            <i className=\"fas fa-user\" />\n                          </span>\n                        </span>\n                      </div>\n                      <div className=\"dropdown-menu\" role=\"menu\">\n                        <div className=\"dropdown-content dropdown-empty\">\n                          <div className=\"dropdown-item\">\n                            <div\n                              role=\"button\"\n                              onClick={logoutFromSystem}\n                            >\n                              <span className=\"icon\">\n                                <i className=\"fa fa-sign-out\" />\n                              </span>\n                              Logout\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )\n              }\n            </div>\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"mainpage\">\n        <div className=\"mainpage_top\">\n          <strong className=\"mainpage_top--text\">Welcome to StoreHouse!</strong>\n        </div>\n        <div className=\"mainpage_middle\">\n          <div className=\"section\">\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { LoginnedUser } from '../types/loginUser';\n\nimport { User } from '../types/user';\nimport { UserWithToken } from '../types/userWithToken';\n\nimport { StatisticsClient } from '../types/StatisticsTypes/statisticsClient';\nimport { StatisticsEmployee }\n  from '../types/StatisticsTypes/statisticsEmployee';\nimport { StatisticsProduct } from '../types/StatisticsTypes/statisticsProduct';\nimport { StatisticsReceipt } from '../types/StatisticsTypes/statisticsReceipt';\n\nimport { StoragesRemain } from '../types/StoragesTypes/storagesRemain';\nimport { StoragesSupply } from '../types/StoragesTypes/storagesSupply';\nimport { StoragesWriteoff } from '../types/StoragesTypes/storagesWriteoff';\nimport { StoragesWriteoffcause }\n  from '../types/StoragesTypes/storagesWriteoffcause';\nimport { StoragesSupplier } from '../types/StoragesTypes/storagesSupplier';\n\nimport { ManagesClient } from '../types/ManagesTypes/managesClient';\nimport { ManagesRole } from '../types/ManagesTypes/managesRole';\nimport { ManagesUser } from '../types/ManagesTypes/managesUser';\n\n// #region account\nexport const authorizeInSystem = (\n  user: LoginnedUser,\n): Promise<UserWithToken | null> => {\n  return client.post('/account/login', user);\n};\n\nexport const deAuthorizeInSystem = (token: string) => {\n  return client.get('/account/logout', token);\n};\n// #endregion\n\n// #region statistic Page\n\nexport const getStatisticsClients = (\n  token: string,\n): Promise<StatisticsClient[]> => {\n  return client.get('/stats/clients', token);\n};\n\nexport const getStatisticsEmployees = (\n  token: string,\n): Promise<StatisticsEmployee[]> => {\n  return client.get('/stats/employees', token);\n};\n\nexport const getStatisticsProducts = (\n  token: string,\n): Promise<StatisticsProduct[]> => {\n  return client.get('/stats/products', token);\n};\n\nexport const getStatisticsReceipts = (\n  token: string,\n): Promise<StatisticsReceipt[]> => {\n  return client.get('/stats/receipts', token);\n};\n\n// #endregion\n\n// #region storage Page\n\nexport const getStoragesRemains = (\n  token: string,\n): Promise<StoragesRemain[]> => {\n  return client.get('/storage/remains', token);\n};\n\nexport const getStoragesSupplies = (\n  token: string,\n): Promise<StoragesSupply[]> => {\n  return client.get('/storage/supplies', token);\n};\n\nexport const getStoragesWriteoffs = (\n  token: string,\n): Promise<StoragesWriteoff[]> => {\n  return client.get('/storage/writeoffs', token);\n};\n\nexport const getStoragesSuppliers = (\n  token: string,\n): Promise<StoragesSupplier[]> => {\n  return client.get('/storage/suppliers', token);\n};\n\nexport const getStoragesWriteoffCauses = (\n  token: string,\n): Promise<StoragesWriteoffcause[]> => {\n  return client.get('/storage/writeoffcauses', token);\n};\n\n// #endregion\n\n// #region manage Page\n\nexport const getManagesClients = (\n  token: string,\n): Promise<ManagesClient[]> => {\n  return client.get('/manage/clients', token);\n};\n\nexport const getManagesUsers = (\n  token: string,\n): Promise<ManagesUser[]> => {\n  return client.get('/manage/users', token);\n};\n\nexport const getManagesRoles = (\n  token: string,\n): Promise<ManagesRole[]> => {\n  return client.get('/manage/roles', token);\n};\n\n// #endregion\n\nexport const getUsers = (token: string): Promise<User[]> => {\n  return client.get('/manage/users', token);\n};\n\n// export const createUser = (user: LoginnedUser) => {\n//   return client.post('/manage/user/create', user);\n// };\n\n// export const getClients = (token: string): Promise<Client[]> => {\n//   return client.get('/manage/clients', token);\n// };\n","import { useContext } from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../AuthContext/AuthContext';\n\nexport const RequireAuth = () => {\n  const { authorized } = useContext(AuthContext);\n  const { pathname } = useLocation();\n\n  if (!authorized) {\n    return <Navigate to=\"/login\" state={{ pathname }} replace />;\n  }\n\n  return <Outlet />;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../components/AuthContext/AuthContext';\nimport './LoginPage.scss';\nimport { authorizeInSystem } from '../api/todos';\nimport { LoginnedUser } from '../types/loginUser';\nimport { UserWithToken } from '../types/userWithToken';\nimport { Loader } from '../components/Loader';\n\nexport const LoginPage: React.FC = () => {\n  const [userName, setUserName] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [isEnteredUserName, setIsEnteredUserName] = useState(true);\n  const [isEnteredPassword, setIsEnteredPassword] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [buttonLoader, setButtonLoader] = useState(false);\n  const [pageLoader, setPageLoader] = useState(true);\n  const { login } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  const authorize = (user: LoginnedUser) => {\n    authorizeInSystem(user)\n      .then(response => login(response as UserWithToken)\n        .then(() => {\n          sessionStorage.setItem('user', JSON.stringify(user));\n          navigate(state?.pathname || '/', { replace: true });\n        }))\n      .catch(() => setErrorMessage(true))\n      .finally(() => setButtonLoader(false));\n  };\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    try {\n      const createdUser = sessionStorage.getItem('user');\n\n      if (createdUser) {\n        authorize(JSON.parse(createdUser));\n      }\n    } finally {\n      setTimeout(() => {\n        setPageLoader(false);\n        inputRef.current?.focus();\n      }, 300);\n    }\n  }, []);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setErrorMessage(false);\n\n    if (!userName) {\n      setIsEnteredUserName(false);\n    }\n\n    if (!password) {\n      setIsEnteredPassword(false);\n    }\n\n    if (userName && password) {\n      setButtonLoader(true);\n\n      const loginnedUser: LoginnedUser = {\n        login: userName.trim(),\n        password: password.trim(),\n      };\n\n      authorize(loginnedUser);\n    }\n  };\n\n  const handleUserName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserName(event.target.value);\n    setIsEnteredUserName(true);\n    setErrorMessage(false);\n  };\n\n  const handlePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n    setIsEnteredPassword(true);\n    setErrorMessage(false);\n  };\n\n  const closeNotification = () => {\n    setErrorMessage(false);\n  };\n\n  return (\n    <div className=\"login_page\">\n      {\n        pageLoader\n          ? (<Loader />)\n          : (\n            <div className=\"card has-background-warning-light\">\n              <form className=\"login_form\" onSubmit={handleSubmit}>\n                <div className=\"login_form--fields\">\n                  <div className=\"field\">\n                    <label className=\"label\">Username</label>\n                    <div className=\"control has-icons-left has-icons-right\">\n                      <input\n                        className={classNames('input', {\n                          'is-danger': !isEnteredUserName,\n                        })}\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={userName}\n                        onChange={handleUserName}\n                        ref={inputRef}\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-user\" />\n                      </span>\n                      {\n                        !isEnteredUserName && (\n                          <p className=\"help is-danger\">\n                            You should enter username\n                          </p>\n                        )\n                      }\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control has-icons-left has-icons-right\">\n                      <input\n                        className={classNames('input', {\n                          'is-danger': !isEnteredPassword,\n                        })}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={handlePassword}\n                      />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-key\" />\n                      </span>\n                    </div>\n                    {\n                      !isEnteredPassword && (\n                        <p className=\"help is-danger\">\n                          You should enter password\n                        </p>\n                      )\n                    }\n                  </div>\n                  <div className=\"field mt-4\">\n                    <div className=\"control\">\n                      <button\n                        type=\"submit\"\n                        className={classNames('button is-link', {\n                          'is-loading': buttonLoader,\n                        })}\n                      >\n                        Enter\n                      </button>\n                    </div>\n                  </div>\n\n                  {\n                    errorMessage && (\n                      <div className=\"notification is-danger mt-5\">\n                        <button\n                          className=\"delete\"\n                          type=\"button\"\n                          onClick={closeNotification}\n                        />\n                        <label>Something went wrong</label>\n                      </div>\n                    )\n                  }\n                </div>\n                <div className=\"login_form--img\">\n                  <img\n                    // src=\"https://avatars.githubusercontent.com/u/63656944?v=4\"\n                    // eslint-disable-next-line max-len\n                    src=\"https://images.squarespace-cdn.com/content/v1/5c94fb9cfb22a522549e13db/a4391bdd-b3d3-4351-a3e3-6b8fe831f176/STOREHOUSE.png\"\n                    alt=\"storehouse_image\"\n                  />\n                </div>\n              </form>\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"asd\">Home page</div>\n  );\n};\n","import React from 'react';\nimport './S_ClientRow.scss';\nimport { StatisticsClient }\n  from '../../../../types/StatisticsTypes/statisticsClient';\n\ntype Props = {\n  client: StatisticsClient;\n};\n\nconst EMPTY = '—';\n\nexport const ClientRow: React.FC<Props> = ({ client }) => {\n  const {\n    fullName,\n    mobilePhone,\n    byCardSum,\n    byCashSum,\n    receiptsCount,\n    averageReceiptSum,\n  } = client;\n\n  return (\n    <tr className=\"S_clientRow\">\n      <td className=\"S_clientColumn\">\n        {fullName || EMPTY}\n      </td>\n      <td className=\"S_clientColumn\">\n        {mobilePhone || EMPTY}\n      </td>\n      <td className=\"S_clientColumn\">\n        {byCardSum || EMPTY}\n      </td>\n      <td className=\"S_clientColumn\">\n        {byCashSum || EMPTY}\n      </td>\n      <td className=\"S_clientColumn\">\n        {receiptsCount || EMPTY}\n      </td>\n      <td className=\"S_clientColumn\">\n        {averageReceiptSum || EMPTY}\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from '../../AuthContext/AuthContext';\nimport { ClientRow } from './ClientRow/ClientRow';\nimport './S_ClientsPage.scss';\nimport { StatisticsClient }\n  from '../../../types/StatisticsTypes/statisticsClient';\nimport { getStatisticsClients } from '../../../api/todos';\nimport { Loader } from '../../Loader';\n\ntype SortParam\n  = 'fullName'\n  | 'mobilePhone'\n  | 'byCardSum'\n  | 'byCashSum'\n  | 'receiptsCount'\n  | 'averageReceiptSum';\n\nconst getSortedClients = (\n  clients: StatisticsClient[],\n  param: SortParam,\n  query: string,\n  reversed: boolean,\n) => {\n  let sortedClients = [...clients];\n\n  if (query) {\n    sortedClients = sortedClients\n      .filter(client => client.fullName.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  switch (param) {\n    case 'mobilePhone':\n    case 'byCardSum':\n    case 'byCashSum':\n    case 'receiptsCount':\n    case 'averageReceiptSum':\n      sortedClients = reversed\n        ? sortedClients.sort(\n          (client1, client2) => Number(client2[param]) - Number(client1[param]),\n        )\n        : sortedClients.sort(\n          (client1, client2) => Number(client1[param]) - Number(client2[param]),\n        );\n\n      break;\n\n    case 'fullName':\n      sortedClients = reversed\n        ? sortedClients.sort(\n          (client1, client2) => client2[param].localeCompare(client1[param]),\n        )\n        : sortedClients.sort(\n          (client1, client2) => client1[param].localeCompare(client2[param]),\n        );\n\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedClients;\n};\n\nexport const ClientsPage = () => {\n  const [clients, setClients] = useState<StatisticsClient[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [param, setParam] = useState<SortParam>('fullName');\n  const [reversed, setReversed] = useState<boolean>(false);\n  const [sortedClients, setSortedClients] = useState<StatisticsClient[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n\n  const { userWithToken } = useContext(AuthContext);\n  const token = userWithToken?.token || '';\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    getStatisticsClients(token)\n      .then(response => {\n        setClients(response);\n\n        const newClients = getSortedClients(response, param, query, reversed);\n\n        setSortedClients(newClients);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setPageLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const newClients = getSortedClients(clients, param, query, reversed);\n\n    setSortedClients(newClients);\n  }, [param, query, reversed]);\n\n  const setSortedParam = (newParam: SortParam) => {\n    setReversed(param === newParam ? !reversed : false);\n\n    setParam(newParam);\n  };\n\n  const inputChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"S_clientspage\">\n      <div className=\"S_clientspage_sort\">\n        <div className=\"S_clientspage_sort--info\">\n          <div className=\"S_clientspage_sort--title\">\n            <p className=\"S_clientspage_sort--title--header\">\n              Clients:\n            </p>\n            <p className=\"S_clientspage_sort--title--counter\">\n              {clients.length}\n            </p>\n          </div>\n\n          <div className=\"S_clientspage_sort--query field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={e => inputChange(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {\n          pageLoader && (<Loader />)\n        }\n\n        {\n          !pageLoader && errorMessage && (\n            <div className=\"notification is-danger mt-5\">\n              <label>Something went wrong</label>\n            </div>\n          )\n        }\n\n        {\n          !pageLoader && !errorMessage && (\n            <table className=\"table S_clientspage_sort--table\">\n              <thead className=\"table S_clientspage_sort--table--head\">\n                <tr className=\"table S_clientspage_sort--table--head_tr\">\n                  <th className=\"S_clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Name\"\n                      className=\"button is-primary \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('fullName')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'fullName' || reversed,\n                          'fa-angle-up': param === 'fullName' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Name</span>\n                    </button>\n                  </th>\n                  <th className=\"S_clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Mobile Phone\"\n                      className=\"\n                        button is-primary S_clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('mobilePhone')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'mobilePhone'\n                            || reversed,\n                          'fa-angle-up': param === 'mobilePhone' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Mobile Phone</span>\n                    </button>\n                  </th>\n                  <th className=\"S_clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Card Sum\"\n                      className=\"\n                        button is-primary S_clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('byCardSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'byCardSum' || reversed,\n                          'fa-angle-up': param === 'byCardSum' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Card Sum</span>\n                    </button>\n\n                  </th>\n                  <th className=\"S_clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipt Sum\"\n                      className=\"\n                        button is-primary S_clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('byCashSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'byCashSum' || reversed,\n                          'fa-angle-up': param === 'byCashSum' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Cash Sum</span>\n                    </button>\n                  </th>\n                  <th className=\"S_clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipts Count\"\n                      className=\"\n                        button is-primary S_clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('receiptsCount')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'receiptsCount'\n                            || reversed,\n                          'fa-angle-up': param === 'receiptsCount'\n                            && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Receipts Count</span>\n                    </button>\n                  </th>\n                  <th className=\"S_clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipt Sum\"\n                      className=\"\n                        button is-primary S_clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('averageReceiptSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'averageReceiptSum'\n                            || reversed,\n                          'fa-angle-up': param === 'averageReceiptSum'\n                            && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Receipt Sum</span>\n                    </button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"S_clientspage_table\">\n                {\n                  sortedClients.map(client => (\n                    <ClientRow client={client} key={client.id} />\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n        }\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport './EmployeeRow.scss';\nimport { StatisticsEmployee }\n  from '../../../../types/StatisticsTypes/statisticsEmployee';\n\ntype Props = {\n  employee: StatisticsEmployee;\n};\n\nconst EMPTY = '—';\n\nexport const EmployeeRow: React.FC<Props> = ({ employee }) => {\n  const {\n    name,\n  } = employee;\n\n  return (\n    <tr className=\"employeeRow\">\n      <td className=\"employeeColumn\">\n        {name || EMPTY}\n      </td>\n      {/* <td className=\"employeeColumn\">\n        {roleName || EMPTY}\n      </td>\n      <td className=\"employeeColumn\">\n        {login || EMPTY}\n      </td>\n      <td className=\"employeeColumn\">\n        {pinCode}\n      </td>\n      <td className=\"employeeColumn\">\n        {lastLoginDate.toLocaleString()}\n      </td> */}\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from '../../AuthContext/AuthContext';\nimport './EmployeesPage.scss';\nimport { Loader } from '../../Loader';\nimport { StatisticsEmployee }\n  from '../../../types/StatisticsTypes/statisticsEmployee';\nimport { getStatisticsEmployees } from '../../../api/todos';\nimport { EmployeeRow } from './EmployeeRow/EmployeeRow';\n\ntype SortParam = 'name';\n\nconst getSortedEmployees = (\n  employees: StatisticsEmployee[],\n  param: SortParam,\n  query: string,\n  reversed: boolean,\n) => {\n  let sortedEmployees = [...employees];\n\n  if (query) {\n    sortedEmployees = sortedEmployees\n      .filter(employee => employee.name.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  switch (param) {\n    // case 'lastLoginDate':\n\n    case 'name':\n      sortedEmployees = reversed\n        ? sortedEmployees.sort(\n          (user1, user2) => user2[param].localeCompare(user1[param]),\n        )\n        : sortedEmployees.sort(\n          (user1, user2) => user1[param].localeCompare(user2[param]),\n        );\n\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedEmployees;\n};\n\nexport const EmployeesPage = () => {\n  const [employees, setEmployees] = useState<StatisticsEmployee[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [param, setParam] = useState<SortParam>('name');\n  const [reversed, setReversed] = useState<boolean>(false);\n  const [sortedEmployees, setSortedEmployees]\n    = useState<StatisticsEmployee[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n\n  const { userWithToken } = useContext(AuthContext);\n  const token = userWithToken?.token || '';\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    getStatisticsEmployees(token)\n      .then(response => {\n        setEmployees(response);\n\n        const newEmployees\n          = getSortedEmployees(response, param, query, reversed);\n\n        setSortedEmployees(newEmployees);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setPageLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const newEmployees = getSortedEmployees(employees, param, query, reversed);\n\n    setSortedEmployees(newEmployees);\n  }, [param, query, reversed]);\n\n  const setSortedParam = (newParam: SortParam) => {\n    setReversed(param === newParam ? !reversed : false);\n\n    setParam(newParam);\n  };\n\n  const inputChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"employeespage\">\n      <div className=\"employeespage_sort\">\n        <div className=\"employeespage_sort--info\">\n          <div className=\"employeespage_sort--title\">\n            <p className=\"employeespage_sort--title--header\">\n              Employees:\n            </p>\n            <p className=\"employeespage_sort--title--counter\">\n              {employees.length}\n            </p>\n          </div>\n\n          <div className=\"employeespage_sort--query field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={e => inputChange(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {\n          pageLoader && (<Loader />)\n        }\n\n        {\n          !pageLoader && errorMessage && (\n            <div className=\"notification is-danger mt-5\">\n              <label>Something went wrong</label>\n            </div>\n          )\n        }\n\n        {\n          !pageLoader && !errorMessage && (\n            <table className=\"table employeespage_sort--table\">\n              <thead className=\"table employeespage_sort--table--head\">\n                <tr className=\"table employeespage_sort--table--head_tr\">\n                  <th className=\"employeespage_sort--table--head_th\">\n                    <button\n                      title=\"Full Name\"\n                      className=\"button is-primary \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('name')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'name' || reversed,\n                          'fa-angle-up': param === 'name' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Full Name</span>\n                    </button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"employeespage_table\">\n                {\n                  sortedEmployees.map(employee => (\n                    <EmployeeRow employee={employee} key={employee.id} />\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n        }\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport './ProductRow.scss';\nimport { StatisticsProduct }\n  from '../../../../types/StatisticsTypes/statisticsProduct';\n\ntype Props = {\n  product: StatisticsProduct;\n};\n\nconst EMPTY = '—';\n\nexport const ProductRow: React.FC<Props> = ({ product }) => {\n  const {\n    name,\n  } = product;\n\n  return (\n    <tr className=\"productRow\">\n      <td className=\"productColumn\">\n        {name || EMPTY}\n      </td>\n      {/* <td className=\"productColumn\">\n        {mobilePhone}\n      </td>\n      <td className=\"productColumn\">\n        {byCardSum}\n      </td>\n      <td className=\"productColumn\">\n        {byCashSum}\n      </td>\n      <td className=\"productColumn\">\n        {receiptsCount}\n      </td>\n      <td className=\"productColumn\">\n        {averageReceiptSum}\n      </td> */}\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from '../../AuthContext/AuthContext';\nimport './ProductsPage.scss';\nimport { getStatisticsProducts } from '../../../api/todos';\nimport { Loader } from '../../Loader';\nimport { StatisticsProduct }\n  from '../../../types/StatisticsTypes/statisticsProduct';\nimport { ProductRow } from './ProductRow/ProductRow';\n\ntype SortParam\n  = 'name';\n\nconst getSortedProducts = (\n  products: StatisticsProduct[],\n  param: SortParam,\n  query: string,\n  reversed: boolean,\n) => {\n  let sortedProducts = [...products];\n\n  if (query) {\n    sortedProducts = sortedProducts\n      .filter(product => product.name.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  switch (param) {\n    // case 'mobilePhone':\n    // case 'byCardSum':\n    // case 'byCashSum':\n    // case 'receiptsCount':\n    // case 'averageReceiptSum':\n    //   sortedClients = reversed\n    //     ? sortedClients.sort(\n    //       (client1, client2) => Number(client2[param]) - Number(client1[param]),\n    //     )\n    //     : sortedClients.sort(\n    //       (client1, client2) => Number(client1[param]) - Number(client2[param]),\n    //     );\n\n    //   break;\n\n    case 'name':\n      sortedProducts = reversed\n        ? sortedProducts.sort(\n          (product1, product2) => product2[param]\n            .localeCompare(product1[param]),\n        )\n        : sortedProducts.sort(\n          (product1, product2) => product1[param]\n            .localeCompare(product2[param]),\n        );\n\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedProducts;\n};\n\nexport const ProductsPage = () => {\n  const [products, setProducts] = useState<StatisticsProduct[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [param, setParam] = useState<SortParam>('name');\n  const [reversed, setReversed] = useState<boolean>(false);\n  const [sortedProducts, setSortedProducts] = useState<StatisticsProduct[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n\n  const { userWithToken } = useContext(AuthContext);\n  const token = userWithToken?.token || '';\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    getStatisticsProducts(token)\n      .then(response => {\n        setProducts(response);\n\n        const newProducts = getSortedProducts(response, param, query, reversed);\n\n        setSortedProducts(newProducts);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setPageLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const newProducts = getSortedProducts(products, param, query, reversed);\n\n    setSortedProducts(newProducts);\n  }, [param, query, reversed]);\n\n  const setSortedParam = (newParam: SortParam) => {\n    setReversed(param === newParam ? !reversed : false);\n\n    setParam(newParam);\n  };\n\n  const inputChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"productspage\">\n      <div className=\"productspage_sort\">\n        <div className=\"productspage_sort--info\">\n          <div className=\"productspage_sort--title\">\n            <p className=\"productspage_sort--title--header\">\n              Products:\n            </p>\n            <p className=\"productspage_sort--title--counter\">\n              {products.length}\n            </p>\n          </div>\n\n          <div className=\"productspage_sort--query field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={e => inputChange(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {\n          pageLoader && (<Loader />)\n        }\n\n        {\n          !pageLoader && errorMessage && (\n            <div className=\"notification is-danger mt-5\">\n              <label>Something went wrong</label>\n            </div>\n          )\n        }\n\n        {\n          !pageLoader && !errorMessage && (\n            <table className=\"table productspage_sort--table\">\n              <thead className=\"table productspage_sort--table--head\">\n                <tr className=\"table productspage_sort--table--head_tr\">\n                  <th className=\"productspage_sort--table--head_th\">\n                    <button\n                      title=\"Name\"\n                      className=\"button is-primary \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('name')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'name' || reversed,\n                          'fa-angle-up': param === 'name' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Name</span>\n                    </button>\n                  </th>\n                  {/* <th className=\"productspage_sort--table--head_th\">\n                    <button\n                      title=\"Mobile Phone\"\n                      className=\"\n                        button is-primary productspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('mobilePhone')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'mobilePhone'\n                            || reversed,\n                          'fa-angle-up': param === 'mobilePhone' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Mobile Phone</span>\n                    </button>\n                  </th>\n                  <th className=\"productspage_sort--table--head_th\">\n                    <button\n                      title=\"Card Sum\"\n                      className=\"\n                        button is-primary productspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('byCardSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'byCardSum' || reversed,\n                          'fa-angle-up': param === 'byCardSum' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Card Sum</span>\n                    </button>\n\n                  </th>\n                  <th className=\"productspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipt Sum\"\n                      className=\"\n                        button is-primary productspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('byCashSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'byCashSum' || reversed,\n                          'fa-angle-up': param === 'byCashSum' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Cash Sum</span>\n                    </button>\n                  </th>\n                  <th className=\"productspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipts Count\"\n                      className=\"\n                        button is-primary productspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('receiptsCount')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'receiptsCount'\n                            || reversed,\n                          'fa-angle-up': param === 'receiptsCount'\n                            && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Receipts Count</span>\n                    </button>\n                  </th>\n                  <th className=\"productspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipt Sum\"\n                      className=\"\n                        button is-primary productclientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('averageReceiptSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'averageReceiptSum'\n                            || reversed,\n                          'fa-angle-up': param === 'averageReceiptSum'\n                            && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Receipt Sum</span>\n                    </button>\n                  </th> */}\n                </tr>\n              </thead>\n              <tbody className=\"productspage_table\">\n                {\n                  sortedProducts.map(product => (\n                    <ProductRow product={product} key={product.id} />\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n        }\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport './ReceiptRow.scss';\nimport { StatisticsReceipt }\n  from '../../../../types/StatisticsTypes/statisticsReceipt';\n\ntype Props = {\n  receipt: StatisticsReceipt;\n};\nconst EMPTY = '—';\n\nexport const ReceiptRow: React.FC<Props> = ({ receipt }) => {\n  const {\n    name,\n  } = receipt;\n\n  return (\n    <tr className=\"receiptRow\">\n      <td className=\"receiptColumn\">\n        {name || EMPTY}\n      </td>\n      {/* <td className=\"receiptColumn\">\n        {mobilePhone}\n      </td>\n      <td className=\"receiptColumn\">\n        {byCardSum}\n      </td>\n      <td className=\"receiptColumn\">\n        {byCashSum}\n      </td>\n      <td className=\"receiptColumn\">\n        {receiptsCount}\n      </td>\n      <td className=\"receiptColumn\">\n        {averageReceiptSum}\n      </td> */}\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from '../../AuthContext/AuthContext';\nimport './ReceiptsPage.scss';\nimport { Loader } from '../../Loader';\nimport { ReceiptRow } from './ReceiptRow/ReceiptRow';\nimport { StatisticsReceipt }\n  from '../../../types/StatisticsTypes/statisticsReceipt';\nimport { getStatisticsReceipts } from '../../../api/todos';\n\ntype SortParam\n  = 'name';\n\nconst getSortedReceipts = (\n  receipts: StatisticsReceipt[],\n  param: SortParam,\n  query: string,\n  reversed: boolean,\n) => {\n  let sortedReceipts = [...receipts];\n\n  if (query) {\n    sortedReceipts = sortedReceipts\n      .filter(receipt => receipt.name.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  switch (param) {\n    // case 'mobilePhone':\n    // case 'byCardSum':\n    // case 'byCashSum':\n    // case 'receiptsCount':\n    // case 'averageReceiptSum':\n    //   sortedClients = reversed\n    //     ? sortedClients.sort(\n    //       (client1, client2) => Number(client2[param]) - Number(client1[param]),\n    //     )\n    //     : sortedClients.sort(\n    //       (client1, client2) => Number(client1[param]) - Number(client2[param]),\n    //     );\n\n    //   break;\n\n    case 'name':\n      sortedReceipts = reversed\n        ? sortedReceipts.sort(\n          (receipt1, receipt2) => receipt2[param]\n            .localeCompare(receipt1[param]),\n        )\n        : sortedReceipts.sort(\n          (receipt1, receipt2) => receipt1[param]\n            .localeCompare(receipt2[param]),\n        );\n\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedReceipts;\n};\n\nexport const ReceiptsPage = () => {\n  const [receipts, setReceipts] = useState<StatisticsReceipt[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [param, setParam] = useState<SortParam>('name');\n  const [reversed, setReversed] = useState<boolean>(false);\n  const [sortedReceipts, setSortedReceipts] = useState<StatisticsReceipt[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n\n  const { userWithToken } = useContext(AuthContext);\n  const token = userWithToken?.token || '';\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    getStatisticsReceipts(token)\n      .then(response => {\n        setReceipts(response);\n\n        const newReceipts = getSortedReceipts(response, param, query, reversed);\n\n        setSortedReceipts(newReceipts);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setPageLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const newReceipts = getSortedReceipts(receipts, param, query, reversed);\n\n    setSortedReceipts(newReceipts);\n  }, [param, query, reversed]);\n\n  const setSortedParam = (newParam: SortParam) => {\n    setReversed(param === newParam ? !reversed : false);\n\n    setParam(newParam);\n  };\n\n  const inputChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"receiptspage\">\n      <div className=\"receiptspage_sort\">\n        <div className=\"receiptspage_sort--info\">\n          <div className=\"receiptspage_sort--title\">\n            <p className=\"receiptspage_sort--title--header\">\n              Receipts:\n            </p>\n            <p className=\"receiptspage_sort--title--counter\">\n              {receipts.length}\n            </p>\n          </div>\n\n          <div className=\"receiptspage_sort--query field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={e => inputChange(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {\n          pageLoader && (<Loader />)\n        }\n\n        {\n          !pageLoader && errorMessage && (\n            <div className=\"notification is-danger mt-5\">\n              <label>Something went wrong</label>\n            </div>\n          )\n        }\n\n        {\n          !pageLoader && !errorMessage && (\n            <table className=\"table receiptspage_sort--table\">\n              <thead className=\"table receiptspage_sort--table--head\">\n                <tr className=\"table receiptspage_sort--table--head_tr\">\n                  <th className=\"receiptspage_sort--table--head_th\">\n                    <button\n                      title=\"Name\"\n                      className=\"button is-primary \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('name')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'name' || reversed,\n                          'fa-angle-up': param === 'name' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Name</span>\n                    </button>\n                  </th>\n                  {/* <th className=\"receiptspage_sort--table--head_th\">\n                    <button\n                      title=\"Mobile Phone\"\n                      className=\"\n                        button is-primary receiptspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('mobilePhone')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'mobilePhone'\n                            || reversed,\n                          'fa-angle-up': param === 'mobilePhone' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Mobile Phone</span>\n                    </button>\n                  </th>\n                  <th className=\"receiptspage_sort--table--head_th\">\n                    <button\n                      title=\"Card Sum\"\n                      className=\"\n                        button is-primary receiptspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('byCardSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'byCardSum' || reversed,\n                          'fa-angle-up': param === 'byCardSum' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Card Sum</span>\n                    </button>\n\n                  </th>\n                  <th className=\"receiptspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipt Sum\"\n                      className=\"\n                        button is-primary receiptspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('byCashSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'byCashSum' || reversed,\n                          'fa-angle-up': param === 'byCashSum' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Cash Sum</span>\n                    </button>\n                  </th>\n                  <th className=\"receiptspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipts Count\"\n                      className=\"\n                        button is-primary receiptspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('receiptsCount')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'receiptsCount'\n                            || reversed,\n                          'fa-angle-up': param === 'receiptsCount'\n                            && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Receipts Count</span>\n                    </button>\n                  </th>\n                  <th className=\"receiptspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipt Sum\"\n                      className=\"\n                        button is-primary receiptclientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('averageReceiptSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'averageReceiptSum'\n                            || reversed,\n                          'fa-angle-up': param === 'averageReceiptSum'\n                            && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Receipt Sum</span>\n                    </button>\n                  </th> */}\n                </tr>\n              </thead>\n              <tbody className=\"receiptspage_table\">\n                {\n                  sortedReceipts.map(receipt => (\n                    <ReceiptRow receipt={receipt} key={receipt.id} />\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n        }\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport './ClientRow.scss';\nimport { ManagesClient } from '../../../../types/ManagesTypes/managesClient';\n\ntype Props = {\n  client: ManagesClient;\n};\n\nexport const ClientRow: React.FC<Props> = ({ client }) => {\n  const {\n    fullName,\n    mobilePhone,\n    bankCard,\n    receiptSum,\n  } = client;\n\n  return (\n    <tr className=\"clientRow\">\n      <td className=\"clientColumn\">\n        {fullName}\n      </td>\n      <td className=\"clientColumn\">\n        {mobilePhone}\n      </td>\n      <td className=\"clientColumn\">\n        {bankCard}\n      </td>\n      <td className=\"clientColumn\">\n        {receiptSum}\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from '../../AuthContext/AuthContext';\nimport './ClientsPage.scss';\nimport { Loader } from '../../Loader';\nimport { ClientRow } from './ClientRow/ClientRow';\nimport { ManagesClient } from '../../../types/ManagesTypes/managesClient';\nimport { getManagesClients } from '../../../api/todos';\n\ntype SortParam\n  = 'fullName'\n  | 'mobilePhone'\n  | 'bankCard'\n  | 'receiptSum';\n\nconst getSortedClients = (\n  clients: ManagesClient[],\n  param: SortParam,\n  query: string,\n  reversed: boolean,\n) => {\n  let sortedClients = [...clients];\n\n  if (query) {\n    sortedClients = sortedClients\n      .filter(client => client.fullName.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  switch (param) {\n    case 'mobilePhone':\n    case 'bankCard':\n    case 'receiptSum':\n      sortedClients = reversed\n        ? sortedClients.sort(\n          (client1, client2) => Number(client2[param]) - Number(client1[param]),\n        )\n        : sortedClients.sort(\n          (client1, client2) => Number(client1[param]) - Number(client2[param]),\n        );\n\n      break;\n\n    case 'fullName':\n      sortedClients = reversed\n        ? sortedClients.sort(\n          (client1, client2) => client2[param].localeCompare(client1[param]),\n        )\n        : sortedClients.sort(\n          (client1, client2) => client1[param].localeCompare(client2[param]),\n        );\n\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedClients;\n};\n\nexport const ClientsPage = () => {\n  const [clients, setClients] = useState<ManagesClient[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [param, setParam] = useState<SortParam>('fullName');\n  const [reversed, setReversed] = useState<boolean>(false);\n  const [sortedClients, setSortedClients] = useState<ManagesClient[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n\n  const { userWithToken } = useContext(AuthContext);\n  const token = userWithToken?.token || '';\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    getManagesClients(token)\n      .then(response => {\n        setClients(response);\n\n        const newClients = getSortedClients(response, param, query, reversed);\n\n        setSortedClients(newClients);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setPageLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const newClients = getSortedClients(clients, param, query, reversed);\n\n    setSortedClients(newClients);\n  }, [param, query, reversed]);\n\n  const setSortedParam = (newParam: SortParam) => {\n    setReversed(param === newParam ? !reversed : false);\n\n    setParam(newParam);\n  };\n\n  const inputChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"clientspage\">\n      <div className=\"clientspage_sort\">\n        <div className=\"clientspage_sort--info\">\n          <div className=\"clientspage_sort--title\">\n            <p className=\"clientspage_sort--title--header\">\n              Clients:\n            </p>\n            <p className=\"clientspage_sort--title--counter\">\n              {clients.length}\n            </p>\n          </div>\n\n          <div className=\"clientspage_sort--query field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={e => inputChange(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {\n          pageLoader && (<Loader />)\n        }\n\n        {\n          !pageLoader && errorMessage && (\n            <div className=\"notification is-danger mt-5\">\n              <label>Something went wrong</label>\n            </div>\n          )\n        }\n\n        {\n          !pageLoader && !errorMessage && (\n            <table className=\"table clientspage_sort--table\">\n              <thead className=\"table clientspage_sort--table--head\">\n                <tr className=\"table clientspage_sort--table--head_tr\">\n                  <th className=\"clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Name\"\n                      className=\"button is-primary \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('fullName')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'fullName' || reversed,\n                          'fa-angle-up': param === 'fullName' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Name</span>\n                    </button>\n                  </th>\n                  <th className=\"clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Mobile Phone\"\n                      className=\"\n                        button is-primary clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('mobilePhone')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'mobilePhone'\n                            || reversed,\n                          'fa-angle-up': param === 'mobilePhone' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Mobile Phone</span>\n                    </button>\n                  </th>\n                  <th className=\"clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Bank Card\"\n                      className=\"\n                        button is-primary clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('bankCard')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'bankCard' || reversed,\n                          'fa-angle-up': param === 'bankCard' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Bank Card</span>\n                    </button>\n\n                  </th>\n                  <th className=\"clientspage_sort--table--head_th\">\n                    <button\n                      title=\"Receipt Sum\"\n                      className=\"\n                        button is-primary clientspage_sort--table--button\n                        \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('receiptSum')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'receiptSum' || reversed,\n                          'fa-angle-up': param === 'receiptSum' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Receipt Sum</span>\n                    </button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"clientspage_table\">\n                {\n                  sortedClients.map(client => (\n                    <ClientRow client={client} key={client.id} />\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n        }\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport './UserRow.scss';\nimport { ManagesUser } from '../../../../types/ManagesTypes/managesUser';\n\ntype Props = {\n  user: ManagesUser;\n};\n\nconst EMPTY = '—';\n\nexport const UserRow: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    roleName,\n    login,\n    pinCode,\n    lastLoginDate,\n  } = user;\n\n  return (\n    <tr className=\"userRow\">\n      <td className=\"userColumn\">\n        {name || EMPTY}\n      </td>\n      <td className=\"userColumn\">\n        {roleName || EMPTY}\n      </td>\n      <td className=\"userColumn\">\n        {login || EMPTY}\n      </td>\n      <td className=\"userColumn\">\n        {pinCode}\n      </td>\n      <td className=\"userColumn\">\n        {lastLoginDate.toLocaleString()}\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from '../../AuthContext/AuthContext';\nimport './UsersPage.scss';\nimport { UserRow } from './UserRow/UserRow';\nimport { getUsers } from '../../../api/todos';\nimport { Loader } from '../../Loader';\nimport { ManagesUser } from '../../../types/ManagesTypes/managesUser';\n\ntype SortParam = 'name' | 'roleName' | 'login' | 'pinCode' | 'lastLoginDate';\n\nconst getSortedUsers = (\n  users: ManagesUser[],\n  param: SortParam,\n  query: string,\n  reversed: boolean,\n) => {\n  let sortedUsers = [...users];\n\n  if (query) {\n    sortedUsers = sortedUsers\n      .filter(user => user.name.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  switch (param) {\n    // case 'lastLoginDate':\n\n    case 'name':\n    case 'roleName':\n    case 'login':\n      sortedUsers = reversed\n        ? sortedUsers.sort(\n          (user1, user2) => user2[param].localeCompare(user1[param]),\n        )\n        : sortedUsers.sort(\n          (user1, user2) => user1[param].localeCompare(user2[param]),\n        );\n\n      break;\n\n    case 'pinCode':\n      sortedUsers = reversed\n        ? sortedUsers.sort(\n          (user1, user2) => Number(user2[param]) - Number(user1[param]),\n        )\n        : sortedUsers.sort(\n          (user1, user2) => Number(user1[param]) - Number(user2[param]),\n        );\n\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedUsers;\n};\n\nexport const UsersPage = () => {\n  const [users, setusers] = useState<ManagesUser[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [param, setParam] = useState<SortParam>('name');\n  const [reversed, setReversed] = useState<boolean>(false);\n  const [sortedUsers, setSortedUsers] = useState<ManagesUser[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n\n  const { userWithToken } = useContext(AuthContext);\n  const token = userWithToken?.token || '';\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    getUsers(token)\n      .then(response => {\n        setusers(response);\n\n        const newUsers = getSortedUsers(response, param, query, reversed);\n\n        setSortedUsers(newUsers);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setPageLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const newUsers = getSortedUsers(users, param, query, reversed);\n\n    setSortedUsers(newUsers);\n  }, [param, query, reversed]);\n\n  const setSortedParam = (newParam: SortParam) => {\n    setReversed(param === newParam ? !reversed : false);\n\n    setParam(newParam);\n  };\n\n  const inputChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"userspage\">\n      <div className=\"userspage_sort\">\n        <div className=\"userspage_sort--info\">\n          <div className=\"userspage_sort--title\">\n            <p className=\"userspage_sort--title--header\">\n              Users:\n            </p>\n            <p className=\"userspage_sort--title--counter\">\n              {users.length}\n            </p>\n          </div>\n\n          <div className=\"userspage_sort--query field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={e => inputChange(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {\n          pageLoader && (<Loader />)\n        }\n\n        {\n          !pageLoader && errorMessage && (\n            <div className=\"notification is-danger mt-5\">\n              <label>Something went wrong</label>\n            </div>\n          )\n        }\n\n        {\n          !pageLoader && !errorMessage && (\n            <table className=\"table userspage_sort--table\">\n              <thead className=\"table userspage_sort--table--head\">\n                <tr className=\"table userspage_sort--table--head_tr\">\n                  <th className=\"userspage_sort--table--head_th\">\n                    <button\n                      title=\"Full Name\"\n                      className=\"button is-primary \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('name')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'name' || reversed,\n                          'fa-angle-up': param === 'name' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Full Name</span>\n                    </button>\n                  </th>\n                  <th className=\"userspage_sort--table--head_th\">\n                    <button\n                      title=\"Role\"\n                      className=\"\n                      button is-primary userspage_sort--table--button\n                      \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('roleName')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'roleName' || reversed,\n                          'fa-angle-up': param === 'roleName' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Role</span>\n                    </button>\n                  </th>\n                  <th className=\"userspage_sort--table--head_th\">\n                    <button\n                      title=\"Login\"\n                      className=\"\n                      button is-primary userspage_sort--table--button\n                      \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('login')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'login' || reversed,\n                          'fa-angle-up': param === 'login' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Login</span>\n                    </button>\n                  </th>\n                  <th className=\"userspage_sort--table--head_th\">\n                    <button\n                      title=\"Pin\"\n                      className=\"\n                      button is-primary userspage_sort--table--button\n                      \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('pinCode')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'pinCode' || reversed,\n                          'fa-angle-up': param === 'pinCode' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Pin</span>\n                    </button>\n                  </th>\n                  <th className=\"userspage_sort--table--head_th\">\n                    <button\n                      title=\"Last Login\"\n                      className=\"\n                      button is-primary userspage_sort--table--button\n                      \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('lastLoginDate')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'lastLoginDate'\n                            || reversed,\n                          'fa-angle-up': param === 'lastLoginDate' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Last Login</span>\n                    </button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"userspage_table\">\n                {\n                  sortedUsers.map(user => (\n                    <UserRow user={user} key={user.id} />\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n        }\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport './RoleRow.scss';\nimport { ManagesRole } from '../../../../types/ManagesTypes/managesRole';\n\ntype Props = {\n  role: ManagesRole;\n};\n\nconst EMPTY = '—';\n\nexport const RoleRow: React.FC<Props> = ({ role }) => {\n  const {\n    name,\n  } = role;\n\n  return (\n    <tr className=\"roleRow\">\n      <td className=\"roleColumn\">\n        {name || EMPTY}\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from '../../AuthContext/AuthContext';\nimport './RolesPage.scss';\nimport { Loader } from '../../Loader';\nimport { ManagesRole } from '../../../types/ManagesTypes/managesRole';\nimport { getManagesRoles } from '../../../api/todos';\nimport { RoleRow } from './RoleRow/RoleRow';\n\ntype SortParam = 'name';\n\nconst getSortedRoles = (\n  roles: ManagesRole[],\n  param: SortParam,\n  query: string,\n  reversed: boolean,\n) => {\n  let sortedRoles = [...roles];\n\n  if (query) {\n    sortedRoles = sortedRoles\n      .filter(role => role.name.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()));\n  }\n\n  switch (param) {\n    case 'name':\n      sortedRoles = reversed\n        ? sortedRoles.sort(\n          (role1, role2) => role2[param].localeCompare(role1[param]),\n        )\n        : sortedRoles.sort(\n          (role1, role2) => role1[param].localeCompare(role2[param]),\n        );\n\n      break;\n\n    default:\n      break;\n  }\n\n  return sortedRoles;\n};\n\nexport const RolesPage = () => {\n  const [roles, setRoles] = useState<ManagesRole[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [param, setParam] = useState<SortParam>('name');\n  const [reversed, setReversed] = useState<boolean>(false);\n  const [sortedRoles, setSortedRoles] = useState<ManagesRole[]>([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [pageLoader, setPageLoader] = useState(false);\n\n  const { userWithToken } = useContext(AuthContext);\n  const token = userWithToken?.token || '';\n\n  useEffect(() => {\n    setPageLoader(true);\n\n    getManagesRoles(token)\n      .then(response => {\n        setRoles(response);\n\n        const newUsers = getSortedRoles(response, param, query, reversed);\n\n        setSortedRoles(newUsers);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setPageLoader(false));\n  }, []);\n\n  useEffect(() => {\n    const newRoles = getSortedRoles(roles, param, query, reversed);\n\n    setSortedRoles(newRoles);\n  }, [param, query, reversed]);\n\n  const setSortedParam = (newParam: SortParam) => {\n    setReversed(param === newParam ? !reversed : false);\n\n    setParam(newParam);\n  };\n\n  const inputChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"rolespage\">\n      <div className=\"rolespage_sort\">\n        <div className=\"rolespage_sort--info\">\n          <div className=\"rolespage_sort--title\">\n            <p className=\"rolespage_sort--title--header\">\n              Roles:\n            </p>\n            <p className=\"rolespage_sort--title--counter\">\n              {roles.length}\n            </p>\n          </div>\n\n          <div className=\"rolespage_sort--query field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={e => inputChange(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </p>\n          </div>\n        </div>\n\n        {\n          pageLoader && (<Loader />)\n        }\n\n        {\n          !pageLoader && errorMessage && (\n            <div className=\"notification is-danger mt-5\">\n              <label>Something went wrong</label>\n            </div>\n          )\n        }\n\n        {\n          !pageLoader && !errorMessage && (\n            <table className=\"table rolespage_sort--table\">\n              <thead className=\"table rolespage_sort--table--head\">\n                <tr className=\"table rolespage_sort--table--head_tr\">\n                  <th className=\"rolespage_sort--table--head_th\">\n                    <button\n                      title=\"Full Name\"\n                      className=\"button is-primary \"\n                      type=\"button\"\n                      onClick={() => setSortedParam('name')}\n                    >\n                      <span className=\"icon is-small\">\n                        <i className={classNames('fas', {\n                          'fa-angle-down': param !== 'name' || reversed,\n                          'fa-angle-up': param === 'name' && !reversed,\n                        })}\n                        />\n                      </span>\n                      <span>Role Name</span>\n                    </button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"rolespage_table\">\n                {\n                  sortedRoles.map(role => (\n                    <RoleRow role={role} key={role.id} />\n                  ))\n                }\n              </tbody>\n            </table>\n          )\n        }\n      </div>\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\n\nimport { AuthProvider } from './components/AuthContext/AuthContext';\nimport { RequireAuth } from './components/RequireAuth/RequireAuth';\nimport { LoginPage } from './LoginPage/LoginPage';\n\nimport { HomePage } from './components/HomePage/HomePage';\n\nimport { ClientsPage as StatisticsClientsPage } from './components/StatisticsPages/ClientsPage/ClientsPage';\nimport { EmployeesPage } from './components/StatisticsPages/EmployeesPage/EmployeesPage';\nimport { ProductsPage } from './components/StatisticsPages/ProductsPage/ProductsPage';\nimport { ReceiptsPage } from './components/StatisticsPages/ReceiptsPage/ReceiptsPage';\n\nimport { ClientsPage as ManagesClientsPage } from './components/ManagesPages/ClientsPage/ClientsPage';\nimport { UsersPage } from './components/ManagesPages/UsersPage/UsersPage';\nimport { RolesPage } from './components/ManagesPages/RolesPage/RolesPage';\n\nexport const Root = () => (\n  <BrowserRouter>\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<RequireAuth />}>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n\n            <Route path=\"statistic\">\n              <Route path=\"clients\" element={<StatisticsClientsPage />} />\n              <Route path=\"employees\" element={<EmployeesPage />} />\n              <Route path=\"products\" element={<ProductsPage />} />\n              <Route path=\"receipts\" element={<ReceiptsPage />} />\n            </Route>\n\n            <Route path=\"storage\">\n              {/* <Route path=\"remains\" element={<ManagesClientsPage />} />\n              <Route path=\"supplies\" element={<UsersPage />} />\n              <Route path=\"writeoffs\" element={<RolesPage />} />\n              <Route path=\"suppliers\" element={<RolesPage />} />\n              <Route path=\"writeoffcauses\" element={<RolesPage />} /> */}\n            </Route>\n\n            <Route path=\"manage\">\n              <Route path=\"clients\" element={<ManagesClientsPage />} />\n              <Route path=\"users\" element={<UsersPage />} />\n              <Route path=\"roles\" element={<RolesPage />} />\n            </Route>\n          </Route>\n        </Route>\n        <Route path=\"login\" element={<LoginPage />} />\n        <Route path=\"*\" element={<p>Error Page</p>} />\n      </Routes>\n    </AuthProvider>\n  </BrowserRouter>\n);\n\n// {/* <Provider store={store}> */ }\n// {/* </Provider> */ }\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\nimport 'bulma/css/bulma.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container).render(\n  <Root />,\n);\n"],"sourceRoot":""}